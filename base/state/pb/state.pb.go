// Code generated by protoc-gen-go. DO NOT EDIT.
// source: base/state/pb/state.proto

package fs_base_state

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	pb "zskparker.com/foundation/base/pb"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UpsertRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Status               int64    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertRequest) Reset()         { *m = UpsertRequest{} }
func (m *UpsertRequest) String() string { return proto.CompactTextString(m) }
func (*UpsertRequest) ProtoMessage()    {}
func (*UpsertRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_46435a06ea457212, []int{0}
}

func (m *UpsertRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertRequest.Unmarshal(m, b)
}
func (m *UpsertRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertRequest.Marshal(b, m, deterministic)
}
func (m *UpsertRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertRequest.Merge(m, src)
}
func (m *UpsertRequest) XXX_Size() int {
	return xxx_messageInfo_UpsertRequest.Size(m)
}
func (m *UpsertRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertRequest proto.InternalMessageInfo

func (m *UpsertRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *UpsertRequest) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

type GetRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_46435a06ea457212, []int{1}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type GetResponse struct {
	State                *pb.State `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Status               int64     `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_46435a06ea457212, []int{2}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetState() *pb.State {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *GetResponse) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func init() {
	proto.RegisterType((*UpsertRequest)(nil), "fs.base.state.UpsertRequest")
	proto.RegisterType((*GetRequest)(nil), "fs.base.state.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "fs.base.state.GetResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StateClient is the client API for State service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StateClient interface {
	// 插入（如果没有则新建，有则覆盖）
	Upsert(ctx context.Context, in *UpsertRequest, opts ...grpc.CallOption) (*pb.Response, error)
	// 获取
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
}

type stateClient struct {
	cc *grpc.ClientConn
}

func NewStateClient(cc *grpc.ClientConn) StateClient {
	return &stateClient{cc}
}

func (c *stateClient) Upsert(ctx context.Context, in *UpsertRequest, opts ...grpc.CallOption) (*pb.Response, error) {
	out := new(pb.Response)
	err := c.cc.Invoke(ctx, "/fs.base.state.State/Upsert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stateClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/fs.base.state.State/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StateServer is the server API for State service.
type StateServer interface {
	// 插入（如果没有则新建，有则覆盖）
	Upsert(context.Context, *UpsertRequest) (*pb.Response, error)
	// 获取
	Get(context.Context, *GetRequest) (*GetResponse, error)
}

func RegisterStateServer(s *grpc.Server, srv StateServer) {
	s.RegisterService(&_State_serviceDesc, srv)
}

func _State_Upsert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StateServer).Upsert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.base.state.State/Upsert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StateServer).Upsert(ctx, req.(*UpsertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _State_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StateServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.base.state.State/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StateServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _State_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fs.base.state.State",
	HandlerType: (*StateServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Upsert",
			Handler:    _State_Upsert_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _State_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "base/state/pb/state.proto",
}

func init() { proto.RegisterFile("base/state/pb/state.proto", fileDescriptor_46435a06ea457212) }

var fileDescriptor_46435a06ea457212 = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4c, 0x4a, 0x2c, 0x4e,
	0xd5, 0x2f, 0x2e, 0x49, 0x2c, 0x49, 0xd5, 0x2f, 0x48, 0x82, 0x30, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b,
	0xf2, 0x85, 0x78, 0xd3, 0x8a, 0xf5, 0x40, 0xb2, 0x7a, 0x60, 0x41, 0x29, 0xed, 0xaa, 0xe2, 0xec,
	0x82, 0xc4, 0xa2, 0xec, 0xd4, 0x22, 0xbd, 0xe4, 0xfc, 0x5c, 0xfd, 0xb4, 0xfc, 0xd2, 0xbc, 0x94,
	0xc4, 0x92, 0xcc, 0xfc, 0x3c, 0x7d, 0xb0, 0x11, 0x05, 0x49, 0x60, 0x1a, 0xa2, 0x57, 0xc9, 0x92,
	0x8b, 0x37, 0xb4, 0xa0, 0x38, 0xb5, 0xa8, 0x24, 0x28, 0xb5, 0xb0, 0x34, 0xb5, 0xb8, 0x44, 0x48,
	0x80, 0x8b, 0x39, 0x3b, 0xb5, 0x52, 0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x08, 0xc4, 0x14, 0x12,
	0xe3, 0x62, 0x03, 0x19, 0x5c, 0x5a, 0x2c, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x1c, 0x04, 0xe5, 0x29,
	0xc9, 0x71, 0x71, 0xb9, 0xa7, 0xe2, 0xd6, 0xa7, 0xe4, 0xcd, 0xc5, 0x0d, 0x96, 0x2f, 0x2e, 0xc8,
	0xcf, 0x2b, 0x4e, 0x15, 0x52, 0xe1, 0x62, 0x05, 0xbb, 0x0f, 0xac, 0x84, 0xdb, 0x88, 0x4f, 0x0f,
	0xe6, 0xea, 0x60, 0x90, 0x68, 0x10, 0x44, 0x12, 0x97, 0x65, 0x46, 0x0d, 0x8c, 0x5c, 0xac, 0x60,
	0x85, 0x42, 0x96, 0x5c, 0x6c, 0x10, 0x17, 0x0b, 0xc9, 0xe8, 0xa1, 0x78, 0x5c, 0x0f, 0xc5, 0x23,
	0x52, 0x82, 0x70, 0x59, 0xb8, 0x13, 0x6c, 0xb8, 0x98, 0xdd, 0x53, 0x4b, 0x84, 0x24, 0xd1, 0xf4,
	0x21, 0x7c, 0x21, 0x25, 0x85, 0x4d, 0x0a, 0xa2, 0x3b, 0x89, 0x0d, 0x1c, 0x62, 0xc6, 0x80, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x1a, 0x1b, 0x95, 0x81, 0x8a, 0x01, 0x00, 0x00,
}
