// Code generated by protoc-gen-go. DO NOT EDIT.
// source: base/strategy/pb/strategy1.proto

package fs_base_strategy

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	pb "zskparker.com/foundation/base/pb"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InitRequest struct {
	ProjectId            string   `protobuf:"bytes,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	Creator              string   `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitRequest) Reset()         { *m = InitRequest{} }
func (m *InitRequest) String() string { return proto.CompactTextString(m) }
func (*InitRequest) ProtoMessage()    {}
func (*InitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c2af803868a95d0, []int{0}
}

func (m *InitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitRequest.Unmarshal(m, b)
}
func (m *InitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitRequest.Marshal(b, m, deterministic)
}
func (m *InitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitRequest.Merge(m, src)
}
func (m *InitRequest) XXX_Size() int {
	return xxx_messageInfo_InitRequest.Size(m)
}
func (m *InitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InitRequest proto.InternalMessageInfo

func (m *InitRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *InitRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type GetRequest struct {
	ProjectId            string   `protobuf:"bytes,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c2af803868a95d0, []int{1}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

type GetResponse struct {
	State                *pb.State    `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Strategy             *pb.Strategy `protobuf:"bytes,2,opt,name=strategy,proto3" json:"strategy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c2af803868a95d0, []int{2}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetState() *pb.State {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *GetResponse) GetStrategy() *pb.Strategy {
	if m != nil {
		return m.Strategy
	}
	return nil
}

type UpsertRequest struct {
	Strategy             *pb.Strategy `protobuf:"bytes,1,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Meta                 *pb.Meta     `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpsertRequest) Reset()         { *m = UpsertRequest{} }
func (m *UpsertRequest) String() string { return proto.CompactTextString(m) }
func (*UpsertRequest) ProtoMessage()    {}
func (*UpsertRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c2af803868a95d0, []int{3}
}

func (m *UpsertRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertRequest.Unmarshal(m, b)
}
func (m *UpsertRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertRequest.Marshal(b, m, deterministic)
}
func (m *UpsertRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertRequest.Merge(m, src)
}
func (m *UpsertRequest) XXX_Size() int {
	return xxx_messageInfo_UpsertRequest.Size(m)
}
func (m *UpsertRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertRequest proto.InternalMessageInfo

func (m *UpsertRequest) GetStrategy() *pb.Strategy {
	if m != nil {
		return m.Strategy
	}
	return nil
}

func (m *UpsertRequest) GetMeta() *pb.Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func init() {
	proto.RegisterType((*InitRequest)(nil), "fs.base.strategy.InitRequest")
	proto.RegisterType((*GetRequest)(nil), "fs.base.strategy.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "fs.base.strategy.GetResponse")
	proto.RegisterType((*UpsertRequest)(nil), "fs.base.strategy.UpsertRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StrategyClient is the client API for Strategy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StrategyClient interface {
	// 查找
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	// 更新
	Upsert(ctx context.Context, in *UpsertRequest, opts ...grpc.CallOption) (*pb.Response, error)
	// 初始化
	Init(ctx context.Context, in *InitRequest, opts ...grpc.CallOption) (*pb.Response, error)
}

type strategyClient struct {
	cc *grpc.ClientConn
}

func NewStrategyClient(cc *grpc.ClientConn) StrategyClient {
	return &strategyClient{cc}
}

func (c *strategyClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/fs.base.strategy.Strategy/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *strategyClient) Upsert(ctx context.Context, in *UpsertRequest, opts ...grpc.CallOption) (*pb.Response, error) {
	out := new(pb.Response)
	err := c.cc.Invoke(ctx, "/fs.base.strategy.Strategy/Upsert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *strategyClient) Init(ctx context.Context, in *InitRequest, opts ...grpc.CallOption) (*pb.Response, error) {
	out := new(pb.Response)
	err := c.cc.Invoke(ctx, "/fs.base.strategy.Strategy/Init", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StrategyServer is the server API for Strategy service.
type StrategyServer interface {
	// 查找
	Get(context.Context, *GetRequest) (*GetResponse, error)
	// 更新
	Upsert(context.Context, *UpsertRequest) (*pb.Response, error)
	// 初始化
	Init(context.Context, *InitRequest) (*pb.Response, error)
}

func RegisterStrategyServer(s *grpc.Server, srv StrategyServer) {
	s.RegisterService(&_Strategy_serviceDesc, srv)
}

func _Strategy_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.base.strategy.Strategy/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Strategy_Upsert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyServer).Upsert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.base.strategy.Strategy/Upsert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyServer).Upsert(ctx, req.(*UpsertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Strategy_Init_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyServer).Init(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.base.strategy.Strategy/Init",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyServer).Init(ctx, req.(*InitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Strategy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fs.base.strategy.Strategy",
	HandlerType: (*StrategyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Strategy_Get_Handler,
		},
		{
			MethodName: "Upsert",
			Handler:    _Strategy_Upsert_Handler,
		},
		{
			MethodName: "Init",
			Handler:    _Strategy_Init_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "base/strategy/pb/strategy1.proto",
}

func init() { proto.RegisterFile("base/strategy/pb/strategy1.proto", fileDescriptor_3c2af803868a95d0) }

var fileDescriptor_3c2af803868a95d0 = []byte{
	// 310 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x86, 0x53, 0x45, 0x84, 0x69, 0x30, 0xba, 0x27, 0xd2, 0x60, 0xc4, 0xc6, 0x83, 0xd1, 0xb8,
	0xd5, 0x7a, 0xf1, 0xe0, 0xc9, 0xc4, 0x10, 0x0e, 0x5e, 0x6a, 0x7c, 0x80, 0x6d, 0x19, 0x0c, 0x12,
	0xba, 0xeb, 0xee, 0x70, 0xd0, 0x07, 0xf4, 0xb9, 0x4c, 0xb7, 0x74, 0x5b, 0x11, 0x83, 0xa7, 0xb6,
	0xfb, 0x7f, 0xff, 0xcc, 0xdf, 0x99, 0x85, 0x61, 0x2a, 0x0c, 0x46, 0x86, 0xb4, 0x20, 0x7c, 0xfd,
	0x88, 0x54, 0xea, 0xde, 0x6f, 0xb8, 0xd2, 0x92, 0x24, 0x3b, 0x9c, 0x1a, 0x5e, 0x40, 0xbc, 0x12,
	0x82, 0xcb, 0x4f, 0x33, 0x57, 0x42, 0xcf, 0x51, 0xf3, 0x4c, 0x2e, 0xa2, 0xa9, 0x5c, 0xe6, 0x13,
	0x41, 0x33, 0x99, 0x47, 0xb6, 0x98, 0x4a, 0xed, 0xb3, 0xb4, 0x07, 0xd7, 0x5b, 0xe1, 0xb5, 0x86,
	0xe1, 0x23, 0xf8, 0xe3, 0x7c, 0x46, 0x09, 0xbe, 0x2f, 0xd1, 0x10, 0x1b, 0x40, 0x57, 0x69, 0xf9,
	0x86, 0x19, 0x8d, 0x27, 0x7d, 0x6f, 0xe8, 0x9d, 0x77, 0x93, 0xfa, 0x80, 0xf5, 0x61, 0x3f, 0xd3,
	0x28, 0x48, 0xea, 0xfe, 0x8e, 0xd5, 0xaa, 0xcf, 0xf0, 0x02, 0x60, 0x84, 0xff, 0xab, 0x12, 0xa6,
	0xe0, 0x5b, 0xd6, 0x28, 0x99, 0x1b, 0x64, 0x67, 0xb0, 0x67, 0x48, 0x10, 0x5a, 0xd0, 0x8f, 0x0f,
	0x78, 0x35, 0x82, 0xe7, 0xe2, 0x34, 0x29, 0x45, 0x76, 0x05, 0x9d, 0x2a, 0xba, 0xed, 0xed, 0xc7,
	0x47, 0x0d, 0xb0, 0x14, 0x12, 0x87, 0x84, 0x02, 0x7a, 0x2f, 0xca, 0xa0, 0x76, 0x91, 0x9a, 0x7e,
	0x6f, 0xab, 0x9f, 0x9d, 0x42, 0x6b, 0x81, 0x24, 0x56, 0xad, 0x7a, 0x0e, 0x7d, 0x42, 0x12, 0x89,
	0x95, 0xe2, 0x2f, 0x0f, 0x3a, 0x95, 0x93, 0x3d, 0xc0, 0xee, 0x08, 0x89, 0x0d, 0xf8, 0xfa, 0xfe,
	0x78, 0x3d, 0x96, 0xe0, 0xf8, 0x0f, 0x75, 0x35, 0x88, 0x7b, 0x68, 0x97, 0x99, 0xd9, 0xc9, 0x6f,
	0xf0, 0xc7, 0xdf, 0x04, 0x75, 0x76, 0xe7, 0xbe, 0x83, 0x56, 0xb1, 0x48, 0xb6, 0xa1, 0x49, 0x63,
	0xc1, 0x1b, 0x9c, 0x69, 0xdb, 0xde, 0x84, 0xdb, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5f, 0x7f,
	0xc1, 0xfd, 0x9e, 0x02, 0x00, 0x00,
}
