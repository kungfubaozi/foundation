// Code generated by protoc-gen-go. DO NOT EDIT.
// source: base/invite/pb/invite.proto

package fs_base_invite

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	pb "zskparker.com/foundation/base/pb"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddRequest struct {
	Phone                string   `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Enterprise           string   `protobuf:"bytes,2,opt,name=enterprise,proto3" json:"enterprise,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}
func (*AddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bf72a1accb58b55, []int{0}
}

func (m *AddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRequest.Unmarshal(m, b)
}
func (m *AddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRequest.Marshal(b, m, deterministic)
}
func (m *AddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest.Merge(m, src)
}
func (m *AddRequest) XXX_Size() int {
	return xxx_messageInfo_AddRequest.Size(m)
}
func (m *AddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest proto.InternalMessageInfo

func (m *AddRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *AddRequest) GetEnterprise() string {
	if m != nil {
		return m.Enterprise
	}
	return ""
}

func init() {
	proto.RegisterType((*AddRequest)(nil), "fs.base.invite.AddRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InviteClient is the client API for Invite service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InviteClient interface {
	// 添加
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*pb.Response, error)
}

type inviteClient struct {
	cc *grpc.ClientConn
}

func NewInviteClient(cc *grpc.ClientConn) InviteClient {
	return &inviteClient{cc}
}

func (c *inviteClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*pb.Response, error) {
	out := new(pb.Response)
	err := c.cc.Invoke(ctx, "/fs.base.invite.Invite/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InviteServer is the server API for Invite service.
type InviteServer interface {
	// 添加
	Add(context.Context, *AddRequest) (*pb.Response, error)
}

func RegisterInviteServer(s *grpc.Server, srv InviteServer) {
	s.RegisterService(&_Invite_serviceDesc, srv)
}

func _Invite_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InviteServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.base.invite.Invite/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InviteServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Invite_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fs.base.invite.Invite",
	HandlerType: (*InviteServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Invite_Add_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "base/invite/pb/invite.proto",
}

func init() { proto.RegisterFile("base/invite/pb/invite.proto", fileDescriptor_0bf72a1accb58b55) }

var fileDescriptor_0bf72a1accb58b55 = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4e, 0x4a, 0x2c, 0x4e,
	0xd5, 0xcf, 0xcc, 0x2b, 0xcb, 0x2c, 0x49, 0xd5, 0x2f, 0x48, 0x82, 0xb2, 0xf4, 0x0a, 0x8a, 0xf2,
	0x4b, 0xf2, 0x85, 0xf8, 0xd2, 0x8a, 0xf5, 0x40, 0xf2, 0x7a, 0x10, 0x51, 0x29, 0xed, 0xaa, 0xe2,
	0xec, 0x82, 0xc4, 0xa2, 0xec, 0xd4, 0x22, 0xbd, 0xe4, 0xfc, 0x5c, 0xfd, 0xb4, 0xfc, 0xd2, 0xbc,
	0x94, 0xc4, 0x92, 0xcc, 0xfc, 0x3c, 0x7d, 0xb0, 0x29, 0x05, 0x49, 0x60, 0x1a, 0xa2, 0x59, 0xc9,
	0x89, 0x8b, 0xcb, 0x31, 0x25, 0x25, 0x28, 0xb5, 0xb0, 0x34, 0xb5, 0xb8, 0x44, 0x48, 0x84, 0x8b,
	0xb5, 0x20, 0x23, 0x3f, 0x2f, 0x55, 0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x08, 0xc2, 0x11, 0x92,
	0xe3, 0xe2, 0x4a, 0xcd, 0x2b, 0x49, 0x2d, 0x2a, 0x28, 0xca, 0x2c, 0x4e, 0x95, 0x60, 0x02, 0x4b,
	0x21, 0x89, 0x18, 0xd9, 0x71, 0xb1, 0x79, 0x82, 0xad, 0x16, 0x32, 0xe1, 0x62, 0x76, 0x4c, 0x49,
	0x11, 0x92, 0xd2, 0x43, 0x75, 0x92, 0x1e, 0xc2, 0x0a, 0x29, 0x41, 0xb8, 0x5c, 0x50, 0x6a, 0x71,
	0x41, 0x7e, 0x5e, 0x71, 0x6a, 0x12, 0x1b, 0xd8, 0x29, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x29, 0xe4, 0x89, 0x9b, 0xe6, 0x00, 0x00, 0x00,
}
