// Code generated by protoc-gen-go. DO NOT EDIT.
// source: base/logger/pb/logger.proto

package fs_base_logger

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LoggerClient is the client API for Logger service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoggerClient interface {
}

type loggerClient struct {
	cc *grpc.ClientConn
}

func NewLoggerClient(cc *grpc.ClientConn) LoggerClient {
	return &loggerClient{cc}
}

// LoggerServer is the server API for Logger service.
type LoggerServer interface {
}

func RegisterLoggerServer(s *grpc.Server, srv LoggerServer) {
	s.RegisterService(&_Logger_serviceDesc, srv)
}

var _Logger_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fs.base.logger.Logger",
	HandlerType: (*LoggerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "base/logger/pb/logger.proto",
}

func init() { proto.RegisterFile("base/logger/pb/logger.proto", fileDescriptor_ce5252db079b211b) }

var fileDescriptor_ce5252db079b211b = []byte{
	// 69 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4e, 0x4a, 0x2c, 0x4e,
	0xd5, 0xcf, 0xc9, 0x4f, 0x4f, 0x4f, 0x2d, 0xd2, 0x2f, 0x48, 0x82, 0xb2, 0xf4, 0x0a, 0x8a, 0xf2,
	0x4b, 0xf2, 0x85, 0xf8, 0xd2, 0x8a, 0xf5, 0x40, 0xf2, 0x7a, 0x10, 0x51, 0x23, 0x0e, 0x2e, 0x36,
	0x1f, 0x30, 0x2b, 0x89, 0x0d, 0xac, 0xc0, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x24, 0x3c, 0x6c,
	0xbe, 0x3f, 0x00, 0x00, 0x00,
}
