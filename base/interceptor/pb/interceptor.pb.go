// Code generated by protoc-gen-go. DO NOT EDIT.
// source: base/interceptor/pb/interceptor.proto

package fs_base_interceptor

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InterceptorClient is the client API for Interceptor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InterceptorClient interface {
}

type interceptorClient struct {
	cc *grpc.ClientConn
}

func NewInterceptorClient(cc *grpc.ClientConn) InterceptorClient {
	return &interceptorClient{cc}
}

// InterceptorServer is the server API for Interceptor service.
type InterceptorServer interface {
}

func RegisterInterceptorServer(s *grpc.Server, srv InterceptorServer) {
	s.RegisterService(&_Interceptor_serviceDesc, srv)
}

var _Interceptor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fs.base.interceptor.Interceptor",
	HandlerType: (*InterceptorServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "base/interceptor/pb/interceptor.proto",
}

func init() {
	proto.RegisterFile("base/interceptor/pb/interceptor.proto", fileDescriptor_45cf45fb04bd98f2)
}

var fileDescriptor_45cf45fb04bd98f2 = []byte{
	// 75 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4d, 0x4a, 0x2c, 0x4e,
	0xd5, 0xcf, 0xcc, 0x2b, 0x49, 0x2d, 0x4a, 0x4e, 0x2d, 0x28, 0xc9, 0x2f, 0xd2, 0x2f, 0x48, 0x42,
	0xe6, 0xea, 0x15, 0x14, 0xe5, 0x97, 0xe4, 0x0b, 0x09, 0xa7, 0x15, 0xeb, 0x81, 0x54, 0xea, 0x21,
	0x49, 0x19, 0xf1, 0x72, 0x71, 0x7b, 0x22, 0xb8, 0x49, 0x6c, 0x60, 0xa5, 0xc6, 0x80, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x1e, 0x17, 0xb8, 0x3d, 0x53, 0x00, 0x00, 0x00,
}
