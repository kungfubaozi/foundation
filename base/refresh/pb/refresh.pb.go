// Code generated by protoc-gen-go. DO NOT EDIT.
// source: base/refresh/pb/refresh.proto

package fs_base_refresh

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	pb "zskparker.com/foundation/base/pb"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AuthRequest struct {
	Meta                 *pb.Meta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RefreshToken         string   `protobuf:"bytes,2,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c97d9213b81ad5c7, []int{0}
}

func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (m *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(m, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetMeta() *pb.Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *AuthRequest) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

type AuthResponse struct {
	State                *pb.State `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	AccessToken          string    `protobuf:"bytes,2,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AuthResponse) Reset()         { *m = AuthResponse{} }
func (m *AuthResponse) String() string { return proto.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()    {}
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c97d9213b81ad5c7, []int{1}
}

func (m *AuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthResponse.Unmarshal(m, b)
}
func (m *AuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthResponse.Marshal(b, m, deterministic)
}
func (m *AuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthResponse.Merge(m, src)
}
func (m *AuthResponse) XXX_Size() int {
	return xxx_messageInfo_AuthResponse.Size(m)
}
func (m *AuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthResponse proto.InternalMessageInfo

func (m *AuthResponse) GetState() *pb.State {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *AuthResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func init() {
	proto.RegisterType((*AuthRequest)(nil), "fs.base.refresh.AuthRequest")
	proto.RegisterType((*AuthResponse)(nil), "fs.base.refresh.AuthResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RefreshClient is the client API for Refresh service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RefreshClient interface {
	Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error)
}

type refreshClient struct {
	cc *grpc.ClientConn
}

func NewRefreshClient(cc *grpc.ClientConn) RefreshClient {
	return &refreshClient{cc}
}

func (c *refreshClient) Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/fs.base.refresh.Refresh/Auth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RefreshServer is the server API for Refresh service.
type RefreshServer interface {
	Auth(context.Context, *AuthRequest) (*AuthResponse, error)
}

func RegisterRefreshServer(s *grpc.Server, srv RefreshServer) {
	s.RegisterService(&_Refresh_serviceDesc, srv)
}

func _Refresh_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RefreshServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.base.refresh.Refresh/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RefreshServer).Auth(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Refresh_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fs.base.refresh.Refresh",
	HandlerType: (*RefreshServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Auth",
			Handler:    _Refresh_Auth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "base/refresh/pb/refresh.proto",
}

func init() { proto.RegisterFile("base/refresh/pb/refresh.proto", fileDescriptor_c97d9213b81ad5c7) }

var fileDescriptor_c97d9213b81ad5c7 = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0xa9, 0xac, 0x8a, 0xd3, 0x55, 0x21, 0xa7, 0x65, 0x71, 0xa1, 0x16, 0x0f, 0x0b, 0x42,
	0x02, 0xeb, 0x13, 0x88, 0x67, 0x3d, 0xc4, 0xc5, 0x7b, 0x52, 0xa7, 0xac, 0x94, 0x4d, 0x62, 0x66,
	0x7a, 0xf1, 0xe9, 0xa5, 0x49, 0x2b, 0x55, 0xf0, 0x94, 0xf0, 0xfd, 0xc9, 0xf7, 0x67, 0x02, 0x1b,
	0x6b, 0x08, 0x55, 0xc4, 0x36, 0x22, 0x1d, 0x54, 0xb0, 0xd3, 0x56, 0x86, 0xe8, 0xd9, 0x8b, 0xeb,
	0x96, 0xe4, 0x70, 0x42, 0x8e, 0x78, 0x7d, 0xff, 0x45, 0x5d, 0x30, 0xb1, 0xc3, 0x28, 0x1b, 0x7f,
	0x54, 0xad, 0xef, 0xdd, 0xbb, 0xe1, 0x0f, 0xef, 0x54, 0x12, 0x05, 0x9b, 0xd6, 0x7c, 0xbb, 0xde,
	0x43, 0xf9, 0xd8, 0xf3, 0x41, 0xe3, 0x67, 0x8f, 0xc4, 0xe2, 0x16, 0x16, 0x47, 0x64, 0xb3, 0x2a,
	0xaa, 0x62, 0x5b, 0xee, 0x2e, 0xe5, 0xe4, 0x7e, 0x46, 0x36, 0x3a, 0x45, 0xa2, 0x86, 0xe5, 0xd8,
	0xb4, 0xf7, 0x1d, 0xba, 0xd5, 0x49, 0x55, 0x6c, 0x2f, 0xf4, 0x2f, 0x56, 0xbf, 0xc1, 0x32, 0x5b,
	0x29, 0x78, 0x47, 0x28, 0xee, 0xe0, 0x94, 0xd8, 0x30, 0x8e, 0xde, 0xab, 0x1f, 0xef, 0xeb, 0x40,
	0x75, 0x0e, 0x45, 0x05, 0xa5, 0x69, 0x1a, 0x24, 0x9a, 0x8b, 0xe7, 0x68, 0xf7, 0x02, 0xe7, 0x3a,
	0xf7, 0x88, 0x27, 0x58, 0x0c, 0x15, 0xe2, 0x46, 0xfe, 0x99, 0x5f, 0xce, 0xe6, 0x59, 0x6f, 0xfe,
	0x49, 0xf3, 0xbb, 0xec, 0x59, 0xfa, 0x84, 0x87, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdf, 0xab,
	0xd1, 0x9a, 0x63, 0x01, 0x00, 0x00,
}
