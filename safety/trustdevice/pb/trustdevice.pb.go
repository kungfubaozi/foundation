// Code generated by protoc-gen-go. DO NOT EDIT.
// source: safety/trustdevice/pb/trustdevice.proto

package fs_safety_trustdevice

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TrustDeviceClient is the client API for TrustDevice service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TrustDeviceClient interface {
}

type trustDeviceClient struct {
	cc *grpc.ClientConn
}

func NewTrustDeviceClient(cc *grpc.ClientConn) TrustDeviceClient {
	return &trustDeviceClient{cc}
}

// TrustDeviceServer is the server API for TrustDevice service.
type TrustDeviceServer interface {
}

func RegisterTrustDeviceServer(s *grpc.Server, srv TrustDeviceServer) {
	s.RegisterService(&_TrustDevice_serviceDesc, srv)
}

var _TrustDevice_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fs.safety.trustdevice.TrustDevice",
	HandlerType: (*TrustDeviceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "safety/trustdevice/pb/trustdevice.proto",
}

func init() {
	proto.RegisterFile("safety/trustdevice/pb/trustdevice.proto", fileDescriptor_da5b59a4a16ac30b)
}

var fileDescriptor_da5b59a4a16ac30b = []byte{
	// 79 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2f, 0x4e, 0x4c, 0x4b,
	0x2d, 0xa9, 0xd4, 0x2f, 0x29, 0x2a, 0x2d, 0x2e, 0x49, 0x49, 0x2d, 0xcb, 0x4c, 0x4e, 0xd5, 0x2f,
	0x48, 0x42, 0xe6, 0xea, 0x15, 0x14, 0xe5, 0x97, 0xe4, 0x0b, 0x89, 0xa6, 0x15, 0xeb, 0x41, 0xd4,
	0xea, 0x21, 0x49, 0x1a, 0xf1, 0x72, 0x71, 0x87, 0x80, 0xb8, 0x2e, 0x60, 0x6e, 0x12, 0x1b, 0x58,
	0xb1, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x0e, 0xbf, 0xcb, 0x57, 0x00, 0x00, 0x00,
}
