// Code generated by protoc-gen-go. DO NOT EDIT.
// source: safety/blacklist/pb/blacklist.proto

package fs_safety_blacklist

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	pb "zskparker.com/foundation/base/pb"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CheckAccountRequest struct {
	Account              string       `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Meta                 *pb.Metadata `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CheckAccountRequest) Reset()         { *m = CheckAccountRequest{} }
func (m *CheckAccountRequest) String() string { return proto.CompactTextString(m) }
func (*CheckAccountRequest) ProtoMessage()    {}
func (*CheckAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc33b09e0453396d, []int{0}
}

func (m *CheckAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckAccountRequest.Unmarshal(m, b)
}
func (m *CheckAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckAccountRequest.Marshal(b, m, deterministic)
}
func (m *CheckAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckAccountRequest.Merge(m, src)
}
func (m *CheckAccountRequest) XXX_Size() int {
	return xxx_messageInfo_CheckAccountRequest.Size(m)
}
func (m *CheckAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckAccountRequest proto.InternalMessageInfo

func (m *CheckAccountRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *CheckAccountRequest) GetMeta() *pb.Metadata {
	if m != nil {
		return m.Meta
	}
	return nil
}

type CheckMetaRequest struct {
	Ip                   string       `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Device               string       `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	ClientId             string       `protobuf:"bytes,3,opt,name=clientId,proto3" json:"clientId,omitempty"`
	UserId               string       `protobuf:"bytes,4,opt,name=userId,proto3" json:"userId,omitempty"`
	Meta                 *pb.Metadata `protobuf:"bytes,5,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CheckMetaRequest) Reset()         { *m = CheckMetaRequest{} }
func (m *CheckMetaRequest) String() string { return proto.CompactTextString(m) }
func (*CheckMetaRequest) ProtoMessage()    {}
func (*CheckMetaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc33b09e0453396d, []int{1}
}

func (m *CheckMetaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckMetaRequest.Unmarshal(m, b)
}
func (m *CheckMetaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckMetaRequest.Marshal(b, m, deterministic)
}
func (m *CheckMetaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckMetaRequest.Merge(m, src)
}
func (m *CheckMetaRequest) XXX_Size() int {
	return xxx_messageInfo_CheckMetaRequest.Size(m)
}
func (m *CheckMetaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckMetaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckMetaRequest proto.InternalMessageInfo

func (m *CheckMetaRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *CheckMetaRequest) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *CheckMetaRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *CheckMetaRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CheckMetaRequest) GetMeta() *pb.Metadata {
	if m != nil {
		return m.Meta
	}
	return nil
}

type AddRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Device               string   `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`
	Account              string   `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}
func (*AddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc33b09e0453396d, []int{2}
}

func (m *AddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRequest.Unmarshal(m, b)
}
func (m *AddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRequest.Marshal(b, m, deterministic)
}
func (m *AddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest.Merge(m, src)
}
func (m *AddRequest) XXX_Size() int {
	return xxx_messageInfo_AddRequest.Size(m)
}
func (m *AddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest proto.InternalMessageInfo

func (m *AddRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AddRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *AddRequest) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *AddRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func init() {
	proto.RegisterType((*CheckAccountRequest)(nil), "fs.safety.blacklist.CheckAccountRequest")
	proto.RegisterType((*CheckMetaRequest)(nil), "fs.safety.blacklist.CheckMetaRequest")
	proto.RegisterType((*AddRequest)(nil), "fs.safety.blacklist.AddRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BlacklistClient is the client API for Blacklist service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlacklistClient interface {
	CheckMeta(ctx context.Context, in *CheckMetaRequest, opts ...grpc.CallOption) (*pb.Response, error)
	CheckAccount(ctx context.Context, in *CheckAccountRequest, opts ...grpc.CallOption) (*pb.Response, error)
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*pb.Response, error)
}

type blacklistClient struct {
	cc *grpc.ClientConn
}

func NewBlacklistClient(cc *grpc.ClientConn) BlacklistClient {
	return &blacklistClient{cc}
}

func (c *blacklistClient) CheckMeta(ctx context.Context, in *CheckMetaRequest, opts ...grpc.CallOption) (*pb.Response, error) {
	out := new(pb.Response)
	err := c.cc.Invoke(ctx, "/fs.safety.blacklist.Blacklist/CheckMeta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blacklistClient) CheckAccount(ctx context.Context, in *CheckAccountRequest, opts ...grpc.CallOption) (*pb.Response, error) {
	out := new(pb.Response)
	err := c.cc.Invoke(ctx, "/fs.safety.blacklist.Blacklist/CheckAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blacklistClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*pb.Response, error) {
	out := new(pb.Response)
	err := c.cc.Invoke(ctx, "/fs.safety.blacklist.Blacklist/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlacklistServer is the server API for Blacklist service.
type BlacklistServer interface {
	CheckMeta(context.Context, *CheckMetaRequest) (*pb.Response, error)
	CheckAccount(context.Context, *CheckAccountRequest) (*pb.Response, error)
	Add(context.Context, *AddRequest) (*pb.Response, error)
}

func RegisterBlacklistServer(s *grpc.Server, srv BlacklistServer) {
	s.RegisterService(&_Blacklist_serviceDesc, srv)
}

func _Blacklist_CheckMeta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckMetaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlacklistServer).CheckMeta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.safety.blacklist.Blacklist/CheckMeta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlacklistServer).CheckMeta(ctx, req.(*CheckMetaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blacklist_CheckAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlacklistServer).CheckAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.safety.blacklist.Blacklist/CheckAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlacklistServer).CheckAccount(ctx, req.(*CheckAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blacklist_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlacklistServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.safety.blacklist.Blacklist/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlacklistServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Blacklist_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fs.safety.blacklist.Blacklist",
	HandlerType: (*BlacklistServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckMeta",
			Handler:    _Blacklist_CheckMeta_Handler,
		},
		{
			MethodName: "CheckAccount",
			Handler:    _Blacklist_CheckAccount_Handler,
		},
		{
			MethodName: "Add",
			Handler:    _Blacklist_Add_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "safety/blacklist/pb/blacklist.proto",
}

func init() {
	proto.RegisterFile("safety/blacklist/pb/blacklist.proto", fileDescriptor_bc33b09e0453396d)
}

var fileDescriptor_bc33b09e0453396d = []byte{
	// 329 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xc1, 0x4a, 0xf3, 0x40,
	0x14, 0x85, 0x49, 0xda, 0xbf, 0xbf, 0xb9, 0x8a, 0xe8, 0x14, 0x24, 0x74, 0x63, 0xa9, 0x14, 0x0a,
	0xc2, 0x04, 0xea, 0xca, 0x65, 0x15, 0x17, 0x45, 0xdc, 0x64, 0xe1, 0x7e, 0x32, 0x73, 0x83, 0x21,
	0x6d, 0x66, 0xcc, 0x4c, 0x04, 0x7d, 0x0f, 0x5f, 0xce, 0xa7, 0x91, 0xce, 0x34, 0x49, 0x23, 0xd1,
	0xe5, 0xb9, 0x37, 0xf7, 0xe3, 0xe4, 0x9c, 0x81, 0x2b, 0xcd, 0x52, 0x34, 0xef, 0x51, 0xb2, 0x61,
	0x3c, 0xdf, 0x64, 0xda, 0x44, 0x2a, 0x69, 0x05, 0x55, 0xa5, 0x34, 0x92, 0x8c, 0x53, 0x4d, 0xdd,
	0x77, 0xb4, 0x59, 0x4d, 0xae, 0x3f, 0x74, 0xae, 0x58, 0x99, 0x63, 0x49, 0xb9, 0xdc, 0x46, 0xa9,
	0xac, 0x0a, 0xc1, 0x4c, 0x26, 0x8b, 0x28, 0x61, 0x1a, 0x2d, 0x86, 0x69, 0x74, 0x84, 0xd9, 0x33,
	0x8c, 0xef, 0x5f, 0x90, 0xe7, 0x2b, 0xce, 0x65, 0x55, 0x98, 0x18, 0x5f, 0x2b, 0xd4, 0x86, 0x84,
	0xf0, 0x9f, 0xb9, 0x49, 0xe8, 0x4d, 0xbd, 0x45, 0x10, 0xd7, 0x92, 0xcc, 0x61, 0xb8, 0x45, 0xc3,
	0x42, 0x7f, 0xea, 0x2d, 0x8e, 0x97, 0xe7, 0x34, 0xd5, 0xd4, 0xe2, 0x9e, 0xd0, 0x30, 0xc1, 0x0c,
	0x8b, 0xed, 0x7a, 0xf6, 0xe9, 0xc1, 0x99, 0x05, 0xef, 0xe6, 0x35, 0xf5, 0x14, 0xfc, 0x4c, 0xed,
	0x81, 0x7e, 0xa6, 0xc8, 0x05, 0x8c, 0x04, 0xbe, 0x65, 0x1c, 0x2d, 0x2d, 0x88, 0xf7, 0x8a, 0x4c,
	0xe0, 0x88, 0x6f, 0x32, 0x2c, 0xcc, 0x5a, 0x84, 0x03, 0xbb, 0x69, 0xf4, 0xee, 0xa6, 0xd2, 0x58,
	0xae, 0x45, 0x38, 0x74, 0x37, 0x4e, 0x35, 0xbe, 0xfe, 0xfd, 0xed, 0x2b, 0x05, 0x58, 0x09, 0x51,
	0x1b, 0x6a, 0x61, 0x5e, 0x07, 0xe6, 0x8c, 0xfa, 0x3d, 0x46, 0x07, 0x1d, 0xa3, 0x07, 0x31, 0x0d,
	0x3b, 0x31, 0x2d, 0xbf, 0x3c, 0x08, 0xee, 0xea, 0x4a, 0xc8, 0x03, 0x04, 0x4d, 0x18, 0x64, 0x4e,
	0x7b, 0x5a, 0xa3, 0x3f, 0xc3, 0x9a, 0xb4, 0xbf, 0x10, 0xa3, 0x56, 0xb2, 0xd0, 0x48, 0x1e, 0xe1,
	0xe4, 0xb0, 0x2c, 0xb2, 0xf8, 0x9d, 0xd4, 0xed, 0xb3, 0x0f, 0x76, 0x0b, 0x83, 0x95, 0x10, 0xe4,
	0xb2, 0x97, 0xd1, 0x66, 0xd4, 0x73, 0x9a, 0x8c, 0xec, 0xdb, 0xb9, 0xf9, 0x0e, 0x00, 0x00, 0xff,
	0xff, 0x10, 0x8c, 0x77, 0x41, 0xa4, 0x02, 0x00, 0x00,
}
