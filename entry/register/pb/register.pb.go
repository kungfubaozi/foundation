// Code generated by protoc-gen-go. DO NOT EDIT.
// source: entry/register/pb/register.proto

package fs_entry_register

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	pb "zskparker.com/foundation/base/pb"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FromAPRequest struct {
	Password             string   `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	Enterprise           string   `protobuf:"bytes,2,opt,name=enterprise,proto3" json:"enterprise,omitempty"`
	Phone                string   `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Meta                 *pb.Meta `protobuf:"bytes,5,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FromAPRequest) Reset()         { *m = FromAPRequest{} }
func (m *FromAPRequest) String() string { return proto.CompactTextString(m) }
func (*FromAPRequest) ProtoMessage()    {}
func (*FromAPRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_738b49ddadfffd25, []int{0}
}

func (m *FromAPRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FromAPRequest.Unmarshal(m, b)
}
func (m *FromAPRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FromAPRequest.Marshal(b, m, deterministic)
}
func (m *FromAPRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FromAPRequest.Merge(m, src)
}
func (m *FromAPRequest) XXX_Size() int {
	return xxx_messageInfo_FromAPRequest.Size(m)
}
func (m *FromAPRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FromAPRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FromAPRequest proto.InternalMessageInfo

func (m *FromAPRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *FromAPRequest) GetEnterprise() string {
	if m != nil {
		return m.Enterprise
	}
	return ""
}

func (m *FromAPRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *FromAPRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *FromAPRequest) GetMeta() *pb.Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type FromOAuthRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Meta                 *pb.Meta `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FromOAuthRequest) Reset()         { *m = FromOAuthRequest{} }
func (m *FromOAuthRequest) String() string { return proto.CompactTextString(m) }
func (*FromOAuthRequest) ProtoMessage()    {}
func (*FromOAuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_738b49ddadfffd25, []int{1}
}

func (m *FromOAuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FromOAuthRequest.Unmarshal(m, b)
}
func (m *FromOAuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FromOAuthRequest.Marshal(b, m, deterministic)
}
func (m *FromOAuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FromOAuthRequest.Merge(m, src)
}
func (m *FromOAuthRequest) XXX_Size() int {
	return xxx_messageInfo_FromOAuthRequest.Size(m)
}
func (m *FromOAuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FromOAuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FromOAuthRequest proto.InternalMessageInfo

func (m *FromOAuthRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FromOAuthRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *FromOAuthRequest) GetMeta() *pb.Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func init() {
	proto.RegisterType((*FromAPRequest)(nil), "fs.entry.register.FromAPRequest")
	proto.RegisterType((*FromOAuthRequest)(nil), "fs.entry.register.FromOAuthRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RegisterClient is the client API for Register service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RegisterClient interface {
	FromAP(ctx context.Context, in *FromAPRequest, opts ...grpc.CallOption) (*pb.Response, error)
	FromOAuth(ctx context.Context, in *FromOAuthRequest, opts ...grpc.CallOption) (*pb.Response, error)
}

type registerClient struct {
	cc *grpc.ClientConn
}

func NewRegisterClient(cc *grpc.ClientConn) RegisterClient {
	return &registerClient{cc}
}

func (c *registerClient) FromAP(ctx context.Context, in *FromAPRequest, opts ...grpc.CallOption) (*pb.Response, error) {
	out := new(pb.Response)
	err := c.cc.Invoke(ctx, "/fs.entry.register.Register/FromAP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registerClient) FromOAuth(ctx context.Context, in *FromOAuthRequest, opts ...grpc.CallOption) (*pb.Response, error) {
	out := new(pb.Response)
	err := c.cc.Invoke(ctx, "/fs.entry.register.Register/FromOAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RegisterServer is the server API for Register service.
type RegisterServer interface {
	FromAP(context.Context, *FromAPRequest) (*pb.Response, error)
	FromOAuth(context.Context, *FromOAuthRequest) (*pb.Response, error)
}

func RegisterRegisterServer(s *grpc.Server, srv RegisterServer) {
	s.RegisterService(&_Register_serviceDesc, srv)
}

func _Register_FromAP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FromAPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegisterServer).FromAP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.entry.register.Register/FromAP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegisterServer).FromAP(ctx, req.(*FromAPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Register_FromOAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FromOAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegisterServer).FromOAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.entry.register.Register/FromOAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegisterServer).FromOAuth(ctx, req.(*FromOAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Register_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fs.entry.register.Register",
	HandlerType: (*RegisterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FromAP",
			Handler:    _Register_FromAP_Handler,
		},
		{
			MethodName: "FromOAuth",
			Handler:    _Register_FromOAuth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "entry/register/pb/register.proto",
}

func init() { proto.RegisterFile("entry/register/pb/register.proto", fileDescriptor_738b49ddadfffd25) }

var fileDescriptor_738b49ddadfffd25 = []byte{
	// 295 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xcf, 0x4a, 0xf4, 0x30,
	0x14, 0xc5, 0x69, 0xe7, 0x0f, 0x33, 0xf7, 0x63, 0x3e, 0x9c, 0xe0, 0xa2, 0x74, 0x21, 0x75, 0xdc,
	0x0c, 0x08, 0x29, 0x8c, 0x6b, 0x17, 0x83, 0xe0, 0x4e, 0x94, 0x6e, 0x5d, 0xa5, 0xf6, 0xd6, 0x09,
	0xb5, 0x49, 0xcc, 0x4d, 0x11, 0x7d, 0x08, 0x1f, 0xc0, 0xa7, 0x95, 0xa6, 0xd3, 0x32, 0xa2, 0xb3,
	0x4a, 0xce, 0x3d, 0xc9, 0x8f, 0x93, 0x13, 0x48, 0x50, 0x39, 0xfb, 0x9e, 0x5a, 0x7c, 0x96, 0xe4,
	0xd0, 0xa6, 0x26, 0x1f, 0xf6, 0xdc, 0x58, 0xed, 0x34, 0x5b, 0x96, 0xc4, 0xfd, 0x21, 0xde, 0x1b,
	0xf1, 0xe5, 0x07, 0x55, 0x46, 0xd8, 0x0a, 0x2d, 0x7f, 0xd2, 0x75, 0x5a, 0xea, 0x46, 0x15, 0xc2,
	0x49, 0xad, 0xd2, 0x5c, 0x10, 0xb6, 0x8c, 0x76, 0xed, 0xee, 0xaf, 0xbe, 0x02, 0x58, 0xdc, 0x5a,
	0x5d, 0x6f, 0x1f, 0x32, 0x7c, 0x6d, 0x90, 0x1c, 0x8b, 0x61, 0x66, 0x04, 0xd1, 0x9b, 0xb6, 0x45,
	0x14, 0x24, 0xc1, 0x7a, 0x9e, 0x0d, 0x9a, 0x9d, 0x01, 0xa0, 0x72, 0x68, 0x8d, 0x95, 0x84, 0x51,
	0xe8, 0xdd, 0x83, 0x09, 0x3b, 0x85, 0x89, 0xd9, 0x69, 0x85, 0xd1, 0xc8, 0x5b, 0x9d, 0x68, 0xa7,
	0x58, 0x0b, 0xf9, 0x12, 0x8d, 0xbb, 0xa9, 0x17, 0xec, 0x1c, 0xc6, 0x35, 0x3a, 0x11, 0x4d, 0x92,
	0x60, 0xfd, 0x6f, 0xb3, 0xe0, 0x25, 0x71, 0x9f, 0xeb, 0x0e, 0x9d, 0xc8, 0xbc, 0xb5, 0x7a, 0x84,
	0x93, 0x36, 0xdb, 0xfd, 0xb6, 0x71, 0xbb, 0x3e, 0xde, 0x7f, 0x08, 0x65, 0x1f, 0x2c, 0x94, 0x45,
	0x0b, 0x77, 0xba, 0x42, 0xb5, 0x4f, 0xd3, 0x89, 0x01, 0x3e, 0x3a, 0x0a, 0xdf, 0x7c, 0x06, 0x30,
	0xcb, 0xf6, 0x9d, 0xb1, 0x6b, 0x98, 0x76, 0x2d, 0xb0, 0x84, 0xff, 0x6a, 0x94, 0xff, 0x28, 0x28,
	0x5e, 0x0e, 0xb4, 0x0c, 0xc9, 0x68, 0x45, 0xc8, 0x6e, 0x60, 0x3e, 0x04, 0x65, 0x17, 0x47, 0x08,
	0x87, 0xcf, 0xf8, 0x03, 0x92, 0x4f, 0xfd, 0x8f, 0x5c, 0x7d, 0x07, 0x00, 0x00, 0xff, 0xff, 0xa6,
	0x56, 0x57, 0xc5, 0xf5, 0x01, 0x00, 0x00,
}
