// Code generated by protoc-gen-go. DO NOT EDIT.
// source: entry/login/pb/login.proto

package fs_entry_login

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	pb "zskparker.com/foundation/base/pb"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EntryResponse struct {
	State                *pb.State `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	RefreshToken         string    `protobuf:"bytes,2,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
	AccessToken          string    `protobuf:"bytes,3,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	Session              string    `protobuf:"bytes,4,opt,name=session,proto3" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *EntryResponse) Reset()         { *m = EntryResponse{} }
func (m *EntryResponse) String() string { return proto.CompactTextString(m) }
func (*EntryResponse) ProtoMessage()    {}
func (*EntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2a3c537b1fd5462, []int{0}
}

func (m *EntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntryResponse.Unmarshal(m, b)
}
func (m *EntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntryResponse.Marshal(b, m, deterministic)
}
func (m *EntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntryResponse.Merge(m, src)
}
func (m *EntryResponse) XXX_Size() int {
	return xxx_messageInfo_EntryResponse.Size(m)
}
func (m *EntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EntryResponse proto.InternalMessageInfo

func (m *EntryResponse) GetState() *pb.State {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *EntryResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *EntryResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *EntryResponse) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

type EntryByFaceRequest struct {
	Meta                 *pb.Meta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntryByFaceRequest) Reset()         { *m = EntryByFaceRequest{} }
func (m *EntryByFaceRequest) String() string { return proto.CompactTextString(m) }
func (*EntryByFaceRequest) ProtoMessage()    {}
func (*EntryByFaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2a3c537b1fd5462, []int{1}
}

func (m *EntryByFaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntryByFaceRequest.Unmarshal(m, b)
}
func (m *EntryByFaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntryByFaceRequest.Marshal(b, m, deterministic)
}
func (m *EntryByFaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntryByFaceRequest.Merge(m, src)
}
func (m *EntryByFaceRequest) XXX_Size() int {
	return xxx_messageInfo_EntryByFaceRequest.Size(m)
}
func (m *EntryByFaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EntryByFaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EntryByFaceRequest proto.InternalMessageInfo

func (m *EntryByFaceRequest) GetMeta() *pb.Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type EntryByQRCodeRequest struct {
	Meta                 *pb.Meta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntryByQRCodeRequest) Reset()         { *m = EntryByQRCodeRequest{} }
func (m *EntryByQRCodeRequest) String() string { return proto.CompactTextString(m) }
func (*EntryByQRCodeRequest) ProtoMessage()    {}
func (*EntryByQRCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2a3c537b1fd5462, []int{2}
}

func (m *EntryByQRCodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntryByQRCodeRequest.Unmarshal(m, b)
}
func (m *EntryByQRCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntryByQRCodeRequest.Marshal(b, m, deterministic)
}
func (m *EntryByQRCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntryByQRCodeRequest.Merge(m, src)
}
func (m *EntryByQRCodeRequest) XXX_Size() int {
	return xxx_messageInfo_EntryByQRCodeRequest.Size(m)
}
func (m *EntryByQRCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EntryByQRCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EntryByQRCodeRequest proto.InternalMessageInfo

func (m *EntryByQRCodeRequest) GetMeta() *pb.Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type EntryByValidateCodeRequest struct {
	Meta                 *pb.Meta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Phone                string   `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntryByValidateCodeRequest) Reset()         { *m = EntryByValidateCodeRequest{} }
func (m *EntryByValidateCodeRequest) String() string { return proto.CompactTextString(m) }
func (*EntryByValidateCodeRequest) ProtoMessage()    {}
func (*EntryByValidateCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2a3c537b1fd5462, []int{3}
}

func (m *EntryByValidateCodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntryByValidateCodeRequest.Unmarshal(m, b)
}
func (m *EntryByValidateCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntryByValidateCodeRequest.Marshal(b, m, deterministic)
}
func (m *EntryByValidateCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntryByValidateCodeRequest.Merge(m, src)
}
func (m *EntryByValidateCodeRequest) XXX_Size() int {
	return xxx_messageInfo_EntryByValidateCodeRequest.Size(m)
}
func (m *EntryByValidateCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EntryByValidateCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EntryByValidateCodeRequest proto.InternalMessageInfo

func (m *EntryByValidateCodeRequest) GetMeta() *pb.Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *EntryByValidateCodeRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type EntryByOAuthRequest struct {
	Meta                 *pb.Meta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	OpenId               string   `protobuf:"bytes,3,opt,name=openId,proto3" json:"openId,omitempty"`
	Token                string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntryByOAuthRequest) Reset()         { *m = EntryByOAuthRequest{} }
func (m *EntryByOAuthRequest) String() string { return proto.CompactTextString(m) }
func (*EntryByOAuthRequest) ProtoMessage()    {}
func (*EntryByOAuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2a3c537b1fd5462, []int{4}
}

func (m *EntryByOAuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntryByOAuthRequest.Unmarshal(m, b)
}
func (m *EntryByOAuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntryByOAuthRequest.Marshal(b, m, deterministic)
}
func (m *EntryByOAuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntryByOAuthRequest.Merge(m, src)
}
func (m *EntryByOAuthRequest) XXX_Size() int {
	return xxx_messageInfo_EntryByOAuthRequest.Size(m)
}
func (m *EntryByOAuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EntryByOAuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EntryByOAuthRequest proto.InternalMessageInfo

func (m *EntryByOAuthRequest) GetMeta() *pb.Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *EntryByOAuthRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *EntryByOAuthRequest) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

func (m *EntryByOAuthRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type EntryByAPRequest struct {
	Meta                 *pb.Meta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Account              string   `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntryByAPRequest) Reset()         { *m = EntryByAPRequest{} }
func (m *EntryByAPRequest) String() string { return proto.CompactTextString(m) }
func (*EntryByAPRequest) ProtoMessage()    {}
func (*EntryByAPRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2a3c537b1fd5462, []int{5}
}

func (m *EntryByAPRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntryByAPRequest.Unmarshal(m, b)
}
func (m *EntryByAPRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntryByAPRequest.Marshal(b, m, deterministic)
}
func (m *EntryByAPRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntryByAPRequest.Merge(m, src)
}
func (m *EntryByAPRequest) XXX_Size() int {
	return xxx_messageInfo_EntryByAPRequest.Size(m)
}
func (m *EntryByAPRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EntryByAPRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EntryByAPRequest proto.InternalMessageInfo

func (m *EntryByAPRequest) GetMeta() *pb.Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *EntryByAPRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *EntryByAPRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func init() {
	proto.RegisterType((*EntryResponse)(nil), "fs.entry.login.EntryResponse")
	proto.RegisterType((*EntryByFaceRequest)(nil), "fs.entry.login.EntryByFaceRequest")
	proto.RegisterType((*EntryByQRCodeRequest)(nil), "fs.entry.login.EntryByQRCodeRequest")
	proto.RegisterType((*EntryByValidateCodeRequest)(nil), "fs.entry.login.EntryByValidateCodeRequest")
	proto.RegisterType((*EntryByOAuthRequest)(nil), "fs.entry.login.EntryByOAuthRequest")
	proto.RegisterType((*EntryByAPRequest)(nil), "fs.entry.login.EntryByAPRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LoginClient is the client API for Login service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoginClient interface {
	// 使用密码账号登录(手机，邮箱，企业号)
	EntryByAP(ctx context.Context, in *EntryByAPRequest, opts ...grpc.CallOption) (*EntryResponse, error)
	// 使用第三方登录
	EntryByOAuth(ctx context.Context, in *EntryByOAuthRequest, opts ...grpc.CallOption) (*EntryResponse, error)
	// 使用验证码登录(手机，邮箱)
	EntryByValidateCode(ctx context.Context, in *EntryByValidateCodeRequest, opts ...grpc.CallOption) (*EntryResponse, error)
	// 使用二维码登录(有平台限制)
	EntryByQRCode(ctx context.Context, in *EntryByQRCodeRequest, opts ...grpc.CallOption) (*EntryResponse, error)
	// 刷脸登录
	EntryByFace(ctx context.Context, in *EntryByFaceRequest, opts ...grpc.CallOption) (*EntryResponse, error)
}

type loginClient struct {
	cc *grpc.ClientConn
}

func NewLoginClient(cc *grpc.ClientConn) LoginClient {
	return &loginClient{cc}
}

func (c *loginClient) EntryByAP(ctx context.Context, in *EntryByAPRequest, opts ...grpc.CallOption) (*EntryResponse, error) {
	out := new(EntryResponse)
	err := c.cc.Invoke(ctx, "/fs.entry.login.Login/EntryByAP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loginClient) EntryByOAuth(ctx context.Context, in *EntryByOAuthRequest, opts ...grpc.CallOption) (*EntryResponse, error) {
	out := new(EntryResponse)
	err := c.cc.Invoke(ctx, "/fs.entry.login.Login/EntryByOAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loginClient) EntryByValidateCode(ctx context.Context, in *EntryByValidateCodeRequest, opts ...grpc.CallOption) (*EntryResponse, error) {
	out := new(EntryResponse)
	err := c.cc.Invoke(ctx, "/fs.entry.login.Login/EntryByValidateCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loginClient) EntryByQRCode(ctx context.Context, in *EntryByQRCodeRequest, opts ...grpc.CallOption) (*EntryResponse, error) {
	out := new(EntryResponse)
	err := c.cc.Invoke(ctx, "/fs.entry.login.Login/EntryByQRCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loginClient) EntryByFace(ctx context.Context, in *EntryByFaceRequest, opts ...grpc.CallOption) (*EntryResponse, error) {
	out := new(EntryResponse)
	err := c.cc.Invoke(ctx, "/fs.entry.login.Login/EntryByFace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoginServer is the server API for Login service.
type LoginServer interface {
	// 使用密码账号登录(手机，邮箱，企业号)
	EntryByAP(context.Context, *EntryByAPRequest) (*EntryResponse, error)
	// 使用第三方登录
	EntryByOAuth(context.Context, *EntryByOAuthRequest) (*EntryResponse, error)
	// 使用验证码登录(手机，邮箱)
	EntryByValidateCode(context.Context, *EntryByValidateCodeRequest) (*EntryResponse, error)
	// 使用二维码登录(有平台限制)
	EntryByQRCode(context.Context, *EntryByQRCodeRequest) (*EntryResponse, error)
	// 刷脸登录
	EntryByFace(context.Context, *EntryByFaceRequest) (*EntryResponse, error)
}

func RegisterLoginServer(s *grpc.Server, srv LoginServer) {
	s.RegisterService(&_Login_serviceDesc, srv)
}

func _Login_EntryByAP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntryByAPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoginServer).EntryByAP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.entry.login.Login/EntryByAP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoginServer).EntryByAP(ctx, req.(*EntryByAPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Login_EntryByOAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntryByOAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoginServer).EntryByOAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.entry.login.Login/EntryByOAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoginServer).EntryByOAuth(ctx, req.(*EntryByOAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Login_EntryByValidateCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntryByValidateCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoginServer).EntryByValidateCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.entry.login.Login/EntryByValidateCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoginServer).EntryByValidateCode(ctx, req.(*EntryByValidateCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Login_EntryByQRCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntryByQRCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoginServer).EntryByQRCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.entry.login.Login/EntryByQRCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoginServer).EntryByQRCode(ctx, req.(*EntryByQRCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Login_EntryByFace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntryByFaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoginServer).EntryByFace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.entry.login.Login/EntryByFace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoginServer).EntryByFace(ctx, req.(*EntryByFaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Login_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fs.entry.login.Login",
	HandlerType: (*LoginServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EntryByAP",
			Handler:    _Login_EntryByAP_Handler,
		},
		{
			MethodName: "EntryByOAuth",
			Handler:    _Login_EntryByOAuth_Handler,
		},
		{
			MethodName: "EntryByValidateCode",
			Handler:    _Login_EntryByValidateCode_Handler,
		},
		{
			MethodName: "EntryByQRCode",
			Handler:    _Login_EntryByQRCode_Handler,
		},
		{
			MethodName: "EntryByFace",
			Handler:    _Login_EntryByFace_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "entry/login/pb/login.proto",
}

func init() { proto.RegisterFile("entry/login/pb/login.proto", fileDescriptor_f2a3c537b1fd5462) }

var fileDescriptor_f2a3c537b1fd5462 = []byte{
	// 434 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x51, 0x6b, 0xd4, 0x40,
	0x10, 0xe6, 0xec, 0x5d, 0x6b, 0xe7, 0xda, 0x22, 0x63, 0x91, 0x10, 0x10, 0xce, 0xd8, 0x87, 0xa2,
	0xb0, 0x07, 0xf5, 0x41, 0x7c, 0xac, 0xa2, 0x20, 0x54, 0xac, 0xb1, 0xfa, 0xec, 0x5e, 0x6e, 0xce,
	0x0b, 0x69, 0x77, 0xd7, 0xcc, 0x06, 0xb9, 0xfe, 0x0f, 0x7f, 0x89, 0x7f, 0x50, 0xb2, 0xd9, 0x84,
	0x9c, 0x5c, 0x08, 0x79, 0xca, 0xce, 0xcc, 0x7e, 0xdf, 0x0c, 0xdf, 0x7e, 0x13, 0x08, 0x49, 0xd9,
	0x7c, 0x33, 0xbf, 0xd5, 0x3f, 0x53, 0x35, 0x37, 0x8b, 0xea, 0x20, 0x4c, 0xae, 0xad, 0xc6, 0x93,
	0x15, 0x0b, 0x57, 0x16, 0x2e, 0x1b, 0xbe, 0xbc, 0xe7, 0xcc, 0xc8, 0x3c, 0xa3, 0x5c, 0x24, 0xfa,
	0x6e, 0xbe, 0xd2, 0x85, 0x5a, 0x4a, 0x9b, 0x6a, 0x35, 0x5f, 0x48, 0xa6, 0x12, 0x5d, 0x7e, 0x2b,
	0x70, 0xf4, 0x67, 0x04, 0xc7, 0xef, 0x4b, 0x70, 0x4c, 0x6c, 0xb4, 0x62, 0xc2, 0x33, 0x98, 0xb0,
	0x95, 0x96, 0x82, 0xd1, 0x6c, 0x74, 0x3e, 0xbd, 0x38, 0x11, 0x2b, 0x16, 0x0e, 0xf0, 0xb5, 0xcc,
	0xc6, 0x55, 0x11, 0x23, 0x38, 0xca, 0x69, 0x95, 0x13, 0xaf, 0x6f, 0x74, 0x46, 0x2a, 0x78, 0x30,
	0x1b, 0x9d, 0x1f, 0xc6, 0x5b, 0x39, 0x9c, 0xc1, 0x54, 0x26, 0x09, 0x31, 0x57, 0x57, 0xf6, 0xdc,
	0x95, 0x76, 0x0a, 0x03, 0x38, 0x60, 0x62, 0x4e, 0xb5, 0x0a, 0xc6, 0xae, 0x5a, 0x87, 0xd1, 0x6b,
	0x40, 0x37, 0xd6, 0xdb, 0xcd, 0x07, 0x99, 0x50, 0x4c, 0xbf, 0x0a, 0x62, 0x8b, 0xcf, 0x60, 0x7c,
	0x47, 0x56, 0xfa, 0xd1, 0x8e, 0x9b, 0xd1, 0x3e, 0x91, 0x95, 0xb1, 0x2b, 0x45, 0x6f, 0xe0, 0xd4,
	0x03, 0xbf, 0xc4, 0xef, 0xf4, 0x72, 0x08, 0xf4, 0x1b, 0x84, 0x1e, 0xfa, 0x5d, 0xde, 0xa6, 0x4b,
	0x69, 0x69, 0x18, 0x01, 0x9e, 0xc2, 0xc4, 0xac, 0xb5, 0x22, 0xaf, 0x46, 0x15, 0x44, 0xf7, 0xf0,
	0xd8, 0xd3, 0x7e, 0xbe, 0x2c, 0xec, 0x7a, 0x00, 0x1f, 0xc2, 0xd8, 0x6e, 0x4c, 0x4d, 0xe7, 0xce,
	0xf8, 0x04, 0xf6, 0xb5, 0x21, 0xf5, 0x71, 0xe9, 0xf5, 0xf4, 0x51, 0xd9, 0xdb, 0x3a, 0x99, 0x2b,
	0x21, 0xab, 0x20, 0xca, 0xe0, 0x91, 0xef, 0x7d, 0x79, 0x3d, 0xa0, 0x71, 0x00, 0x07, 0x32, 0x49,
	0x74, 0xa1, 0xac, 0xef, 0x5d, 0x87, 0x18, 0xc2, 0x43, 0x23, 0x99, 0x7f, 0xeb, 0xbc, 0x1e, 0xa0,
	0x89, 0x2f, 0xfe, 0xee, 0xc1, 0xe4, 0xaa, 0xb4, 0x20, 0x5e, 0xc1, 0x61, 0xd3, 0x16, 0x67, 0x62,
	0xdb, 0xa0, 0xe2, 0xff, 0x89, 0xc2, 0xa7, 0x3b, 0x6f, 0x34, 0x8e, 0x8c, 0xe1, 0xa8, 0x2d, 0x20,
	0x3e, 0xef, 0x20, 0x6c, 0xcb, 0xdb, 0xc7, 0xf9, 0xa3, 0x79, 0x94, 0xf6, 0x5b, 0xe3, 0x8b, 0x0e,
	0xea, 0x1d, 0x86, 0xe8, 0xeb, 0x70, 0xe3, 0x17, 0xab, 0x36, 0x22, 0x9e, 0x75, 0x70, 0x6f, 0xf9,
	0xb4, 0x8f, 0xf5, 0x1a, 0xa6, 0xad, 0xbd, 0xc0, 0xa8, 0x83, 0xb3, 0xb5, 0x34, 0x3d, 0x8c, 0x8b,
	0x7d, 0xf7, 0x23, 0x78, 0xf5, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x10, 0xdd, 0x64, 0x64, 0x63, 0x04,
	0x00, 0x00,
}
